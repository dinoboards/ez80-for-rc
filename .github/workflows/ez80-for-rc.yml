name: ez80-for-rc

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'

jobs:
  hardware:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: pull docker tool chain
        run: |
          docker pull dinoboards/wincupl:0.0.1

      - name: build hardware jed file
        run: |
          docker run -v ./hardware/:/ez80-for-rc/hardware/ --privileged=true -t dinoboards/wincupl:0.0.1 ./make-jed.sh

      - name: Archive hardware
        uses: actions/upload-artifact@v4
        with:
          compression-level: 0
          name: hardware
          path: |
            hardware/bin

  firmware:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: pull docker tool chain
        run: |
          docker pull dinoboards/ez80-rc-builder:0.0.1

      - name: firmware make-debug
        run: docker run --rm -e CI=${CI} -v ./firmware:/ez80-for-rc/firmware --privileged=true -t dinoboards/ez80-rc-builder:0.0.1 wine cmd.exe /c "make-debug.bat"

      - name: firmware make-alt-debug
        run: docker run --rm -e CI=${CI} -v ./firmware:/ez80-for-rc/firmware --privileged=true -t dinoboards/ez80-rc-builder:0.0.1 wine cmd.exe /c "make-alt-debug.bat"

      - name: firmware make-release
        run: docker run --rm -e CI=${CI} -v ./firmware:/ez80-for-rc/firmware --privileged=true -t dinoboards/ez80-rc-builder:0.0.1 wine cmd.exe /c "make-release.bat"

      - name: firmware make-alt-release
        run: docker run --rm -e CI=${CI} -v ./firmware:/ez80-for-rc/firmware --privileged=true -t dinoboards/ez80-rc-builder:0.0.1 wine cmd.exe /c "make-alt-release.bat"

      - name: Archive firmware
        uses: actions/upload-artifact@v4
        with:
          compression-level: 0
          name: firmware
          path: |
            firmware/bin

      - name: Release HEX file
        uses: actions/upload-artifact@v4
        with:
          compression-level: 0
          name: z80-rc-firmware-release.hex
          path: |
            firmware/bin/ez80-rc-firmware-release.hex

      - name: Version File
        uses: actions/upload-artifact@v4
        with:
          compression-level: 0
          name: version.inc
          path: |
            firmware/src/version.inc

  programmer:
    runs-on: ubuntu-latest
    needs: firmware

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: copy z80-rc-firmware-release.hex
        uses: actions/download-artifact@v4
        with:
          name: z80-rc-firmware-release.hex
          path: programmer/build/

      - name: copy version.inc
        uses: actions/download-artifact@v4
        with:
          name: version.inc
          path: programmer/

      - name: pull docker tool chain
        run: |
          docker pull dinoboards/pipico:0.0.2

      - name: programmer build
        run: |
          docker run -v ./programmer:/programmer/ --privileged=true -t dinoboards/pipico:0.0.2 /bin/bash -c "mkdir -p build && cd build && cmake .. && make"

      - name: Archive Programmer PI Pico Firmware
        uses: actions/upload-artifact@v4
        with:
          compression-level: 0
          name: pi-pico-firmware
          path: |
            programmer/build/programmer.uf2

  apps:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: pull docker tool chain
        run: |
          docker pull z88dk/z88dk

      - name: build apps
        run: docker run -v ./apps:/src/ -t z88dk/z88dk make apps -j RELEASE=true

      - name: Archive apps
        uses: actions/upload-artifact@v4
        with:
          compression-level: 0
          name: apps
          path: |
            apps/bin/release/*.COM

  release-notes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: create release notes
        run: ./release-notes.sh

      - name: Archive release notes
        uses: actions/upload-artifact@v4
        with:
          compression-level: 0
          name: release-notes
          path: |
            releases/*.md
