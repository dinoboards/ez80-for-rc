Name     dram-controller;
PartNo   00 ;
Date     12/08/2024 ;
Revision 01 ;
Designer Dean Netherton ;
Company  Dino ;
Assembly None ;
Location Ignored ;
Device   V750C ;


// MANAGE THE RAS/CAS STOBE SIGNALS - AND TRIGGER REFRESHES

/*

PRE_RAS = !ROWCOL;
PRE_CAS = !PRE_RAS;

Init:

Access cycle:

-1. (COL_ADDR) IS FALSE

0. WHILE !MREQ;
   (WAIT BECOMES ACTIVE)
   (REFRSH_ACK MAY BECOME TRUE)

1. WHILE REFRSH_ACTIVE;
   (REFRSH_ACK MAY STAY TRUE)
   (REFRSH_ACK MAY BECOME FALSE)

2. BEGIN RAS
   (RAS BECOMES ACTIVE)

3. RAS HOLD - IS THIS NEEDED?

4. LOAD COLUMN ADDRESS
   (COL_ADDR) BECOMES TRUE
   MUST HAPPEN AT LEAST Trad AFTER RAS BECOMES TRUE

5. BEGIN CAS
   (CAS BECOMES ACTIVE)

6. CAS HOLD - IS THIS NEEDED?
   (WAIT BECOMES INACTIVE)

7. DATA READ/WRITE
   (COL_ADDR GOES FALSE)

0. COMPLETED
   (RAS BECOMES FALSE)
   (CAS BECOMES FALSE)
   (STATE RESETS TO 0)


Refresh Cycle every 15us

0. WHILE !REFRSH_REQ;

1. WHILE !REFRSH_ACK;

2. LATCH CAS
   (CAS BECOMES TRUE)

3. LATCH RAS
   (RAS BECOMES TRUE)

4. RELEASE CAS AND RAS
   (CAS BECOMES FALSE)
   (RAS BECOMES FALSE)


*/

/************* INPUT PINS *********************/
PIN  1 = CLK;
PIN  2 = !CS;
PIN  3 = !MREQ;
PIN  4 = BANK0;
// PIN  5 = NC;
// PIN  6 = NC;
// PIN  7 = NC;
// PIN  8 = NC;
// PIN  9 = NC;
// PIN 10 = NC;
PIN 11 = REFRSH_REQ;
//PIN 13 = NC;

/**************** OUTPUT PINS *********************/
PIN 14 = COL_ADDR;
// PIN 15 = NC;
// PIN 16 = NC;
// PIN 17 = NC;
PIN 18 = !RAS1;
PIN 19 = !RAS0;
PIN 20 = !CAS0;
PIN 21 = !CAS1;
PIN 22 = !WAIT;
// PIN 23 = NC;

/**************** POWER PINS *********************/
PIN 24 = VCC;
PIN 12 = GND;

CS_MREQ = CS & MREQ;

NODE RERSH_REQ;
NODE R0;
NODE R1;
NODE R2;

NODE REFRSH_ACK;

NODE CAS;
NODE RAS;

NODE REFRSH_ACTIVE;

NODE MS0;
NODE MS1;
NODE MS2;

field MEMACC_CNT = [MS0, MS1, MS2];

SEQUENCED MEMACC_CNT {
  // WAIT UNTIL CS_MREQ IS LOW
  PRESENT 0
    IF !CS_MREQ NEXT 0;
    DEFAULT NEXT 1;

  // WAIT UNTIL REFSH IS NOT ACTIVE
  PRESENT 1
    IF !CS_MREQ NEXT 0;
    IF REFRSH_ACTIVE NEXT 1;
    DEFAULT NEXT 2;

  // RAS START (GO LOW)
  PRESENT 2
    IF !CS_MREQ NEXT 0;
    DEFAULT NEXT 3;

  // RAS HOLD
  PRESENT 3
    IF !CS_MREQ NEXT 0;
    DEFAULT NEXT 4;

  // LOAD CAS ADDR
  PRESENT 4
    IF !CS_MREQ NEXT 0;
    DEFAULT NEXT 5;

  //CAS SETUP PERIOD HERE

  // CAS START (GO LOW)
  PRESENT 5
    IF !CS_MREQ NEXT 0;
    DEFAULT NEXT 6;

  // CAS HOLD
  PRESENT 6
    IF !CS_MREQ NEXT 0;
    DEFAULT NEXT 7;

  // DATA EXCHANGE (RELEASE WAIT SIGNAL)
  PRESENT 7
    IF CS_MREQ NEXT 7;
    DEFAULT NEXT 0;
}

WAIT = (MEMACC_CNT:[0] & CS_MREQ) # MEMACC_CNT:[1..6];

LOAD_COL_ADDR = MEMACC_CNT:[4..7];

REFRSH_ACK.D = (MEMACC_CNT:[0..1] & REFRSH_ACTIVE);


field REFSH_CNT = [R0, R1, R2];

SEQUENCED REFSH_CNT {
  PRESENT 0
    IF REFRSH_REQ NEXT 1; DEFAULT NEXT 0;

  PRESENT 1
    IF REFRSH_ACK NEXT 2; DEFAULT NEXT 1;  // LOOP UNTIL MEM_ACCESS IS FALSE

  PRESENT 2
    NEXT 3;

  PRESENT 3
    NEXT 0;

  PRESENT 4
    NEXT 0;
}

REFRSH_ACTIVE.D = (REFSH_CNT:[1..3]);

CAS.D = REFSH_CNT:[2..3] & MEMACC_CNT:[5..7];
RAS.D = REFSH_CNT:[3..3] & MEMACC_CNT:[2..7];

CAS0 = (BANK0 & CAS);
RAS0 = (BANK0 & RAS);

CAS1 = (!BANK0 & CAS);
RAS1 = (!BANK0 & RAS);
